(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))i(o);new MutationObserver(o=>{for(const s of o)if(s.type==="childList")for(const a of s.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&i(a)}).observe(document,{childList:!0,subtree:!0});function n(o){const s={};return o.integrity&&(s.integrity=o.integrity),o.referrerPolicy&&(s.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?s.credentials="include":o.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function i(o){if(o.ep)return;o.ep=!0;const s=n(o);fetch(o.href,s)}})();function c(e,t,n,i){function o(s){return s instanceof n?s:new n(function(a){a(s)})}return new(n||(n=Promise))(function(s,a){function d(u){try{p(i.next(u))}catch(f){a(f)}}function l(u){try{p(i.throw(u))}catch(f){a(f)}}function p(u){u.done?s(u.value):o(u.value).then(d,l)}p((i=i.apply(e,[])).next())})}function P(e,t,n,i){if(typeof t=="function"?e!==t||!i:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return n==="m"?i:n==="a"?i.call(e):i?i.value:t.get(e)}class r extends Error{constructor(t,n=0,i="",o=""){super(t),this.name="AppwriteException",this.message=t,this.code=n,this.type=i,this.response=o}}class h{constructor(){this.config={endpoint:"https://cloud.appwrite.io/v1",endpointRealtime:"",project:"",jwt:"",locale:"",session:""},this.headers={"x-sdk-name":"Web","x-sdk-platform":"client","x-sdk-language":"web","x-sdk-version":"17.0.0","X-Appwrite-Response-Format":"1.6.0"},this.realtime={socket:void 0,timeout:void 0,heartbeat:void 0,url:"",channels:new Set,subscriptions:new Map,subscriptionsCounter:0,reconnect:!0,reconnectAttempts:0,lastMessage:void 0,connect:()=>{clearTimeout(this.realtime.timeout),this.realtime.timeout=window==null?void 0:window.setTimeout(()=>{this.realtime.createSocket()},50)},getTimeout:()=>{switch(!0){case this.realtime.reconnectAttempts<5:return 1e3;case this.realtime.reconnectAttempts<15:return 5e3;case this.realtime.reconnectAttempts<100:return 1e4;default:return 6e4}},createHeartbeat:()=>{this.realtime.heartbeat&&clearTimeout(this.realtime.heartbeat),this.realtime.heartbeat=window==null?void 0:window.setInterval(()=>{var t;(t=this.realtime.socket)===null||t===void 0||t.send(JSON.stringify({type:"ping"}))},2e4)},createSocket:()=>{var t,n,i;if(this.realtime.channels.size<1){this.realtime.reconnect=!1,(t=this.realtime.socket)===null||t===void 0||t.close();return}const o=new URLSearchParams;o.set("project",this.config.project),this.realtime.channels.forEach(a=>{o.append("channels[]",a)});const s=this.config.endpointRealtime+"/realtime?"+o.toString();(s!==this.realtime.url||!this.realtime.socket||((n=this.realtime.socket)===null||n===void 0?void 0:n.readyState)>WebSocket.OPEN)&&(this.realtime.socket&&((i=this.realtime.socket)===null||i===void 0?void 0:i.readyState)<WebSocket.CLOSING&&(this.realtime.reconnect=!1,this.realtime.socket.close()),this.realtime.url=s,this.realtime.socket=new WebSocket(s),this.realtime.socket.addEventListener("message",this.realtime.onMessage),this.realtime.socket.addEventListener("open",a=>{this.realtime.reconnectAttempts=0,this.realtime.createHeartbeat()}),this.realtime.socket.addEventListener("close",a=>{var d,l,p;if(!this.realtime.reconnect||((l=(d=this.realtime)===null||d===void 0?void 0:d.lastMessage)===null||l===void 0?void 0:l.type)==="error"&&((p=this.realtime)===null||p===void 0?void 0:p.lastMessage.data).code===1008){this.realtime.reconnect=!0;return}const u=this.realtime.getTimeout();console.error(`Realtime got disconnected. Reconnect will be attempted in ${u/1e3} seconds.`,a.reason),setTimeout(()=>{this.realtime.reconnectAttempts++,this.realtime.createSocket()},u)}))},onMessage:t=>{var n,i;try{const o=JSON.parse(t.data);switch(this.realtime.lastMessage=o,o.type){case"connected":const s=JSON.parse((n=window.localStorage.getItem("cookieFallback"))!==null&&n!==void 0?n:"{}"),a=s==null?void 0:s[`a_session_${this.config.project}`],d=o.data;a&&!d.user&&((i=this.realtime.socket)===null||i===void 0||i.send(JSON.stringify({type:"authentication",data:{session:a}})));break;case"event":let l=o.data;if(l!=null&&l.channels){if(!l.channels.some(u=>this.realtime.channels.has(u)))return;this.realtime.subscriptions.forEach(u=>{l.channels.some(f=>u.channels.includes(f))&&setTimeout(()=>u.callback(l))})}break;case"pong":break;case"error":throw o.data;default:break}}catch(o){console.error(o)}},cleanUp:t=>{this.realtime.channels.forEach(n=>{t.includes(n)&&(Array.from(this.realtime.subscriptions).some(([o,s])=>s.channels.includes(n))||this.realtime.channels.delete(n))})}}}setEndpoint(t){return this.config.endpoint=t,this.config.endpointRealtime=this.config.endpointRealtime||this.config.endpoint.replace("https://","wss://").replace("http://","ws://"),this}setEndpointRealtime(t){return this.config.endpointRealtime=t,this}setProject(t){return this.headers["X-Appwrite-Project"]=t,this.config.project=t,this}setJWT(t){return this.headers["X-Appwrite-JWT"]=t,this.config.jwt=t,this}setLocale(t){return this.headers["X-Appwrite-Locale"]=t,this.config.locale=t,this}setSession(t){return this.headers["X-Appwrite-Session"]=t,this.config.session=t,this}subscribe(t,n){let i=typeof t=="string"?[t]:t;i.forEach(s=>this.realtime.channels.add(s));const o=this.realtime.subscriptionsCounter++;return this.realtime.subscriptions.set(o,{channels:i,callback:n}),this.realtime.connect(),()=>{this.realtime.subscriptions.delete(o),this.realtime.cleanUp(i),this.realtime.connect()}}prepareRequest(t,n,i={},o={}){if(t=t.toUpperCase(),i=Object.assign({},this.headers,i),typeof window<"u"&&window.localStorage){const a=window.localStorage.getItem("cookieFallback");a&&(i["X-Fallback-Cookies"]=a)}let s={method:t,headers:i,credentials:"include"};if(t==="GET")for(const[a,d]of Object.entries(h.flatten(o)))n.searchParams.append(a,d);else switch(i["content-type"]){case"application/json":s.body=JSON.stringify(o);break;case"multipart/form-data":const a=new FormData;for(const[d,l]of Object.entries(o))if(l instanceof File)a.append(d,l,l.name);else if(Array.isArray(l))for(const p of l)a.append(`${d}[]`,p);else a.append(d,l);s.body=a,delete i["content-type"];break}return{uri:n.toString(),options:s}}chunkedUpload(t,n,i={},o={},s){return c(this,void 0,void 0,function*(){const a=Object.values(o).find(p=>p instanceof File);if(a.size<=h.CHUNK_SIZE)return yield this.call(t,n,i,o);let d=0,l=null;for(;d<a.size;){let p=d+h.CHUNK_SIZE;p>=a.size&&(p=a.size),i["content-range"]=`bytes ${d}-${p-1}/${a.size}`;const u=a.slice(d,p);let f=Object.assign(Object.assign({},o),{file:new File([u],a.name)});l=yield this.call(t,n,i,f),s&&typeof s=="function"&&s({$id:l.$id,progress:Math.round(p/a.size*100),sizeUploaded:p,chunksTotal:Math.ceil(a.size/h.CHUNK_SIZE),chunksUploaded:Math.ceil(p/h.CHUNK_SIZE)}),l&&l.$id&&(i["x-appwrite-id"]=l.$id),d=p}return l})}ping(){return c(this,void 0,void 0,function*(){return this.call("GET",new URL(this.config.endpoint+"/ping"))})}call(t,n,i={},o={},s="json"){var a;return c(this,void 0,void 0,function*(){const{uri:d,options:l}=this.prepareRequest(t,n,i,o);let p=null;const u=yield fetch(d,l),f=u.headers.get("x-appwrite-warning");if(f&&f.split(";").forEach(q=>console.warn("Warning: "+q)),!((a=u.headers.get("content-type"))===null||a===void 0)&&a.includes("application/json")?p=yield u.json():s==="arrayBuffer"?p=yield u.arrayBuffer():p={message:yield u.text()},400<=u.status)throw new r(p==null?void 0:p.message,u.status,p==null?void 0:p.type,p);const v=u.headers.get("X-Fallback-Cookies");return typeof window<"u"&&window.localStorage&&v&&(window.console.warn("Appwrite is using localStorage for session management. Increase your security by adding a custom domain as your API endpoint."),window.localStorage.setItem("cookieFallback",v)),p})}static flatten(t,n=""){let i={};for(const[o,s]of Object.entries(t)){let a=n?n+"["+o+"]":o;Array.isArray(s)?i=Object.assign(Object.assign({},i),h.flatten(s,a)):i[a]=s}return i}}h.CHUNK_SIZE=1024*1024*5;class w{constructor(t){this.client=t}static flatten(t,n=""){let i={};for(const[o,s]of Object.entries(t)){let a=n?n+"["+o+"]":o;Array.isArray(s)?i=Object.assign(Object.assign({},i),w.flatten(s,a)):i[a]=s}return i}}w.CHUNK_SIZE=5*1024*1024;class H{constructor(t){this.client=t}get(){return c(this,void 0,void 0,function*(){const t="/account",n={},i=new URL(this.client.config.endpoint+t),o={"content-type":"application/json"};return yield this.client.call("get",i,o,n)})}create(t,n,i,o){return c(this,void 0,void 0,function*(){if(typeof t>"u")throw new r('Missing required parameter: "userId"');if(typeof n>"u")throw new r('Missing required parameter: "email"');if(typeof i>"u")throw new r('Missing required parameter: "password"');const s="/account",a={};typeof t<"u"&&(a.userId=t),typeof n<"u"&&(a.email=n),typeof i<"u"&&(a.password=i),typeof o<"u"&&(a.name=o);const d=new URL(this.client.config.endpoint+s),l={"content-type":"application/json"};return yield this.client.call("post",d,l,a)})}updateEmail(t,n){return c(this,void 0,void 0,function*(){if(typeof t>"u")throw new r('Missing required parameter: "email"');if(typeof n>"u")throw new r('Missing required parameter: "password"');const i="/account/email",o={};typeof t<"u"&&(o.email=t),typeof n<"u"&&(o.password=n);const s=new URL(this.client.config.endpoint+i),a={"content-type":"application/json"};return yield this.client.call("patch",s,a,o)})}listIdentities(t){return c(this,void 0,void 0,function*(){const n="/account/identities",i={};typeof t<"u"&&(i.queries=t);const o=new URL(this.client.config.endpoint+n),s={"content-type":"application/json"};return yield this.client.call("get",o,s,i)})}deleteIdentity(t){return c(this,void 0,void 0,function*(){if(typeof t>"u")throw new r('Missing required parameter: "identityId"');const n="/account/identities/{identityId}".replace("{identityId}",t),i={},o=new URL(this.client.config.endpoint+n),s={"content-type":"application/json"};return yield this.client.call("delete",o,s,i)})}createJWT(){return c(this,void 0,void 0,function*(){const t="/account/jwts",n={},i=new URL(this.client.config.endpoint+t),o={"content-type":"application/json"};return yield this.client.call("post",i,o,n)})}listLogs(t){return c(this,void 0,void 0,function*(){const n="/account/logs",i={};typeof t<"u"&&(i.queries=t);const o=new URL(this.client.config.endpoint+n),s={"content-type":"application/json"};return yield this.client.call("get",o,s,i)})}updateMFA(t){return c(this,void 0,void 0,function*(){if(typeof t>"u")throw new r('Missing required parameter: "mfa"');const n="/account/mfa",i={};typeof t<"u"&&(i.mfa=t);const o=new URL(this.client.config.endpoint+n),s={"content-type":"application/json"};return yield this.client.call("patch",o,s,i)})}createMfaAuthenticator(t){return c(this,void 0,void 0,function*(){if(typeof t>"u")throw new r('Missing required parameter: "type"');const n="/account/mfa/authenticators/{type}".replace("{type}",t),i={},o=new URL(this.client.config.endpoint+n),s={"content-type":"application/json"};return yield this.client.call("post",o,s,i)})}updateMfaAuthenticator(t,n){return c(this,void 0,void 0,function*(){if(typeof t>"u")throw new r('Missing required parameter: "type"');if(typeof n>"u")throw new r('Missing required parameter: "otp"');const i="/account/mfa/authenticators/{type}".replace("{type}",t),o={};typeof n<"u"&&(o.otp=n);const s=new URL(this.client.config.endpoint+i),a={"content-type":"application/json"};return yield this.client.call("put",s,a,o)})}deleteMfaAuthenticator(t){return c(this,void 0,void 0,function*(){if(typeof t>"u")throw new r('Missing required parameter: "type"');const n="/account/mfa/authenticators/{type}".replace("{type}",t),i={},o=new URL(this.client.config.endpoint+n),s={"content-type":"application/json"};return yield this.client.call("delete",o,s,i)})}createMfaChallenge(t){return c(this,void 0,void 0,function*(){if(typeof t>"u")throw new r('Missing required parameter: "factor"');const n="/account/mfa/challenge",i={};typeof t<"u"&&(i.factor=t);const o=new URL(this.client.config.endpoint+n),s={"content-type":"application/json"};return yield this.client.call("post",o,s,i)})}updateMfaChallenge(t,n){return c(this,void 0,void 0,function*(){if(typeof t>"u")throw new r('Missing required parameter: "challengeId"');if(typeof n>"u")throw new r('Missing required parameter: "otp"');const i="/account/mfa/challenge",o={};typeof t<"u"&&(o.challengeId=t),typeof n<"u"&&(o.otp=n);const s=new URL(this.client.config.endpoint+i),a={"content-type":"application/json"};return yield this.client.call("put",s,a,o)})}listMfaFactors(){return c(this,void 0,void 0,function*(){const t="/account/mfa/factors",n={},i=new URL(this.client.config.endpoint+t),o={"content-type":"application/json"};return yield this.client.call("get",i,o,n)})}getMfaRecoveryCodes(){return c(this,void 0,void 0,function*(){const t="/account/mfa/recovery-codes",n={},i=new URL(this.client.config.endpoint+t),o={"content-type":"application/json"};return yield this.client.call("get",i,o,n)})}createMfaRecoveryCodes(){return c(this,void 0,void 0,function*(){const t="/account/mfa/recovery-codes",n={},i=new URL(this.client.config.endpoint+t),o={"content-type":"application/json"};return yield this.client.call("post",i,o,n)})}updateMfaRecoveryCodes(){return c(this,void 0,void 0,function*(){const t="/account/mfa/recovery-codes",n={},i=new URL(this.client.config.endpoint+t),o={"content-type":"application/json"};return yield this.client.call("patch",i,o,n)})}updateName(t){return c(this,void 0,void 0,function*(){if(typeof t>"u")throw new r('Missing required parameter: "name"');const n="/account/name",i={};typeof t<"u"&&(i.name=t);const o=new URL(this.client.config.endpoint+n),s={"content-type":"application/json"};return yield this.client.call("patch",o,s,i)})}updatePassword(t,n){return c(this,void 0,void 0,function*(){if(typeof t>"u")throw new r('Missing required parameter: "password"');const i="/account/password",o={};typeof t<"u"&&(o.password=t),typeof n<"u"&&(o.oldPassword=n);const s=new URL(this.client.config.endpoint+i),a={"content-type":"application/json"};return yield this.client.call("patch",s,a,o)})}updatePhone(t,n){return c(this,void 0,void 0,function*(){if(typeof t>"u")throw new r('Missing required parameter: "phone"');if(typeof n>"u")throw new r('Missing required parameter: "password"');const i="/account/phone",o={};typeof t<"u"&&(o.phone=t),typeof n<"u"&&(o.password=n);const s=new URL(this.client.config.endpoint+i),a={"content-type":"application/json"};return yield this.client.call("patch",s,a,o)})}getPrefs(){return c(this,void 0,void 0,function*(){const t="/account/prefs",n={},i=new URL(this.client.config.endpoint+t),o={"content-type":"application/json"};return yield this.client.call("get",i,o,n)})}updatePrefs(t){return c(this,void 0,void 0,function*(){if(typeof t>"u")throw new r('Missing required parameter: "prefs"');const n="/account/prefs",i={};typeof t<"u"&&(i.prefs=t);const o=new URL(this.client.config.endpoint+n),s={"content-type":"application/json"};return yield this.client.call("patch",o,s,i)})}createRecovery(t,n){return c(this,void 0,void 0,function*(){if(typeof t>"u")throw new r('Missing required parameter: "email"');if(typeof n>"u")throw new r('Missing required parameter: "url"');const i="/account/recovery",o={};typeof t<"u"&&(o.email=t),typeof n<"u"&&(o.url=n);const s=new URL(this.client.config.endpoint+i),a={"content-type":"application/json"};return yield this.client.call("post",s,a,o)})}updateRecovery(t,n,i){return c(this,void 0,void 0,function*(){if(typeof t>"u")throw new r('Missing required parameter: "userId"');if(typeof n>"u")throw new r('Missing required parameter: "secret"');if(typeof i>"u")throw new r('Missing required parameter: "password"');const o="/account/recovery",s={};typeof t<"u"&&(s.userId=t),typeof n<"u"&&(s.secret=n),typeof i<"u"&&(s.password=i);const a=new URL(this.client.config.endpoint+o),d={"content-type":"application/json"};return yield this.client.call("put",a,d,s)})}listSessions(){return c(this,void 0,void 0,function*(){const t="/account/sessions",n={},i=new URL(this.client.config.endpoint+t),o={"content-type":"application/json"};return yield this.client.call("get",i,o,n)})}deleteSessions(){return c(this,void 0,void 0,function*(){const t="/account/sessions",n={},i=new URL(this.client.config.endpoint+t),o={"content-type":"application/json"};return yield this.client.call("delete",i,o,n)})}createAnonymousSession(){return c(this,void 0,void 0,function*(){const t="/account/sessions/anonymous",n={},i=new URL(this.client.config.endpoint+t),o={"content-type":"application/json"};return yield this.client.call("post",i,o,n)})}createEmailPasswordSession(t,n){return c(this,void 0,void 0,function*(){if(typeof t>"u")throw new r('Missing required parameter: "email"');if(typeof n>"u")throw new r('Missing required parameter: "password"');const i="/account/sessions/email",o={};typeof t<"u"&&(o.email=t),typeof n<"u"&&(o.password=n);const s=new URL(this.client.config.endpoint+i),a={"content-type":"application/json"};return yield this.client.call("post",s,a,o)})}updateMagicURLSession(t,n){return c(this,void 0,void 0,function*(){if(typeof t>"u")throw new r('Missing required parameter: "userId"');if(typeof n>"u")throw new r('Missing required parameter: "secret"');const i="/account/sessions/magic-url",o={};typeof t<"u"&&(o.userId=t),typeof n<"u"&&(o.secret=n);const s=new URL(this.client.config.endpoint+i),a={"content-type":"application/json"};return yield this.client.call("put",s,a,o)})}createOAuth2Session(t,n,i,o){return c(this,void 0,void 0,function*(){if(typeof t>"u")throw new r('Missing required parameter: "provider"');const s="/account/sessions/oauth2/{provider}".replace("{provider}",t),a={};typeof n<"u"&&(a.success=n),typeof i<"u"&&(a.failure=i),typeof o<"u"&&(a.scopes=o);const d=new URL(this.client.config.endpoint+s);a.project=this.client.config.project;for(const[l,p]of Object.entries(w.flatten(a)))d.searchParams.append(l,p);if(typeof window<"u"&&(window!=null&&window.location)){window.location.href=d.toString();return}else return d.toString()})}updatePhoneSession(t,n){return c(this,void 0,void 0,function*(){if(typeof t>"u")throw new r('Missing required parameter: "userId"');if(typeof n>"u")throw new r('Missing required parameter: "secret"');const i="/account/sessions/phone",o={};typeof t<"u"&&(o.userId=t),typeof n<"u"&&(o.secret=n);const s=new URL(this.client.config.endpoint+i),a={"content-type":"application/json"};return yield this.client.call("put",s,a,o)})}createSession(t,n){return c(this,void 0,void 0,function*(){if(typeof t>"u")throw new r('Missing required parameter: "userId"');if(typeof n>"u")throw new r('Missing required parameter: "secret"');const i="/account/sessions/token",o={};typeof t<"u"&&(o.userId=t),typeof n<"u"&&(o.secret=n);const s=new URL(this.client.config.endpoint+i),a={"content-type":"application/json"};return yield this.client.call("post",s,a,o)})}getSession(t){return c(this,void 0,void 0,function*(){if(typeof t>"u")throw new r('Missing required parameter: "sessionId"');const n="/account/sessions/{sessionId}".replace("{sessionId}",t),i={},o=new URL(this.client.config.endpoint+n),s={"content-type":"application/json"};return yield this.client.call("get",o,s,i)})}updateSession(t){return c(this,void 0,void 0,function*(){if(typeof t>"u")throw new r('Missing required parameter: "sessionId"');const n="/account/sessions/{sessionId}".replace("{sessionId}",t),i={},o=new URL(this.client.config.endpoint+n),s={"content-type":"application/json"};return yield this.client.call("patch",o,s,i)})}deleteSession(t){return c(this,void 0,void 0,function*(){if(typeof t>"u")throw new r('Missing required parameter: "sessionId"');const n="/account/sessions/{sessionId}".replace("{sessionId}",t),i={},o=new URL(this.client.config.endpoint+n),s={"content-type":"application/json"};return yield this.client.call("delete",o,s,i)})}updateStatus(){return c(this,void 0,void 0,function*(){const t="/account/status",n={},i=new URL(this.client.config.endpoint+t),o={"content-type":"application/json"};return yield this.client.call("patch",i,o,n)})}createPushTarget(t,n,i){return c(this,void 0,void 0,function*(){if(typeof t>"u")throw new r('Missing required parameter: "targetId"');if(typeof n>"u")throw new r('Missing required parameter: "identifier"');const o="/account/targets/push",s={};typeof t<"u"&&(s.targetId=t),typeof n<"u"&&(s.identifier=n),typeof i<"u"&&(s.providerId=i);const a=new URL(this.client.config.endpoint+o),d={"content-type":"application/json"};return yield this.client.call("post",a,d,s)})}updatePushTarget(t,n){return c(this,void 0,void 0,function*(){if(typeof t>"u")throw new r('Missing required parameter: "targetId"');if(typeof n>"u")throw new r('Missing required parameter: "identifier"');const i="/account/targets/{targetId}/push".replace("{targetId}",t),o={};typeof n<"u"&&(o.identifier=n);const s=new URL(this.client.config.endpoint+i),a={"content-type":"application/json"};return yield this.client.call("put",s,a,o)})}deletePushTarget(t){return c(this,void 0,void 0,function*(){if(typeof t>"u")throw new r('Missing required parameter: "targetId"');const n="/account/targets/{targetId}/push".replace("{targetId}",t),i={},o=new URL(this.client.config.endpoint+n),s={"content-type":"application/json"};return yield this.client.call("delete",o,s,i)})}createEmailToken(t,n,i){return c(this,void 0,void 0,function*(){if(typeof t>"u")throw new r('Missing required parameter: "userId"');if(typeof n>"u")throw new r('Missing required parameter: "email"');const o="/account/tokens/email",s={};typeof t<"u"&&(s.userId=t),typeof n<"u"&&(s.email=n),typeof i<"u"&&(s.phrase=i);const a=new URL(this.client.config.endpoint+o),d={"content-type":"application/json"};return yield this.client.call("post",a,d,s)})}createMagicURLToken(t,n,i,o){return c(this,void 0,void 0,function*(){if(typeof t>"u")throw new r('Missing required parameter: "userId"');if(typeof n>"u")throw new r('Missing required parameter: "email"');const s="/account/tokens/magic-url",a={};typeof t<"u"&&(a.userId=t),typeof n<"u"&&(a.email=n),typeof i<"u"&&(a.url=i),typeof o<"u"&&(a.phrase=o);const d=new URL(this.client.config.endpoint+s),l={"content-type":"application/json"};return yield this.client.call("post",d,l,a)})}createOAuth2Token(t,n,i,o){return c(this,void 0,void 0,function*(){if(typeof t>"u")throw new r('Missing required parameter: "provider"');const s="/account/tokens/oauth2/{provider}".replace("{provider}",t),a={};typeof n<"u"&&(a.success=n),typeof i<"u"&&(a.failure=i),typeof o<"u"&&(a.scopes=o);const d=new URL(this.client.config.endpoint+s);a.project=this.client.config.project;for(const[l,p]of Object.entries(w.flatten(a)))d.searchParams.append(l,p);if(typeof window<"u"&&(window!=null&&window.location)){window.location.href=d.toString();return}else return d.toString()})}createPhoneToken(t,n){return c(this,void 0,void 0,function*(){if(typeof t>"u")throw new r('Missing required parameter: "userId"');if(typeof n>"u")throw new r('Missing required parameter: "phone"');const i="/account/tokens/phone",o={};typeof t<"u"&&(o.userId=t),typeof n<"u"&&(o.phone=n);const s=new URL(this.client.config.endpoint+i),a={"content-type":"application/json"};return yield this.client.call("post",s,a,o)})}createVerification(t){return c(this,void 0,void 0,function*(){if(typeof t>"u")throw new r('Missing required parameter: "url"');const n="/account/verification",i={};typeof t<"u"&&(i.url=t);const o=new URL(this.client.config.endpoint+n),s={"content-type":"application/json"};return yield this.client.call("post",o,s,i)})}updateVerification(t,n){return c(this,void 0,void 0,function*(){if(typeof t>"u")throw new r('Missing required parameter: "userId"');if(typeof n>"u")throw new r('Missing required parameter: "secret"');const i="/account/verification",o={};typeof t<"u"&&(o.userId=t),typeof n<"u"&&(o.secret=n);const s=new URL(this.client.config.endpoint+i),a={"content-type":"application/json"};return yield this.client.call("put",s,a,o)})}createPhoneVerification(){return c(this,void 0,void 0,function*(){const t="/account/verification/phone",n={},i=new URL(this.client.config.endpoint+t),o={"content-type":"application/json"};return yield this.client.call("post",i,o,n)})}updatePhoneVerification(t,n){return c(this,void 0,void 0,function*(){if(typeof t>"u")throw new r('Missing required parameter: "userId"');if(typeof n>"u")throw new r('Missing required parameter: "secret"');const i="/account/verification/phone",o={};typeof t<"u"&&(o.userId=t),typeof n<"u"&&(o.secret=n);const s=new URL(this.client.config.endpoint+i),a={"content-type":"application/json"};return yield this.client.call("put",s,a,o)})}}var R,T;class b{static custom(t){return t}static unique(t=7){const n=P(b,R,"m",T).call(b);let i="";for(let o=0;o<t;o++){const s=Math.floor(Math.random()*16).toString(16);i+=s}return n+i}}R=b,T=function(){const t=new Date,n=Math.floor(t.getTime()/1e3),i=t.getMilliseconds();return n.toString(16)+i.toString(16).padStart(5,"0")};var g;(function(e){e.Totp="totp"})(g||(g={}));var S;(function(e){e.Email="email",e.Phone="phone",e.Totp="totp",e.Recoverycode="recoverycode"})(S||(S={}));var x;(function(e){e.Amazon="amazon",e.Apple="apple",e.Auth0="auth0",e.Authentik="authentik",e.Autodesk="autodesk",e.Bitbucket="bitbucket",e.Bitly="bitly",e.Box="box",e.Dailymotion="dailymotion",e.Discord="discord",e.Disqus="disqus",e.Dropbox="dropbox",e.Etsy="etsy",e.Facebook="facebook",e.Github="github",e.Gitlab="gitlab",e.Google="google",e.Linkedin="linkedin",e.Microsoft="microsoft",e.Notion="notion",e.Oidc="oidc",e.Okta="okta",e.Paypal="paypal",e.PaypalSandbox="paypalSandbox",e.Podio="podio",e.Salesforce="salesforce",e.Slack="slack",e.Spotify="spotify",e.Stripe="stripe",e.Tradeshift="tradeshift",e.TradeshiftBox="tradeshiftBox",e.Twitch="twitch",e.Wordpress="wordpress",e.Yahoo="yahoo",e.Yammer="yammer",e.Yandex="yandex",e.Zoho="zoho",e.Zoom="zoom",e.Mock="mock"})(x||(x={}));var k;(function(e){e.AvantBrowser="aa",e.AndroidWebViewBeta="an",e.GoogleChrome="ch",e.GoogleChromeIOS="ci",e.GoogleChromeMobile="cm",e.Chromium="cr",e.MozillaFirefox="ff",e.Safari="sf",e.MobileSafari="mf",e.MicrosoftEdge="ps",e.MicrosoftEdgeIOS="oi",e.OperaMini="om",e.Opera="op",e.OperaNext="on"})(k||(k={}));var L;(function(e){e.AmericanExpress="amex",e.Argencard="argencard",e.Cabal="cabal",e.Cencosud="cencosud",e.DinersClub="diners",e.Discover="discover",e.Elo="elo",e.Hipercard="hipercard",e.JCB="jcb",e.Mastercard="mastercard",e.Naranja="naranja",e.TarjetaShopping="targeta-shopping",e.UnionChinaPay="union-china-pay",e.Visa="visa",e.MIR="mir",e.Maestro="maestro"})(L||(L={}));var M;(function(e){e.Afghanistan="af",e.Angola="ao",e.Albania="al",e.Andorra="ad",e.UnitedArabEmirates="ae",e.Argentina="ar",e.Armenia="am",e.AntiguaAndBarbuda="ag",e.Australia="au",e.Austria="at",e.Azerbaijan="az",e.Burundi="bi",e.Belgium="be",e.Benin="bj",e.BurkinaFaso="bf",e.Bangladesh="bd",e.Bulgaria="bg",e.Bahrain="bh",e.Bahamas="bs",e.BosniaAndHerzegovina="ba",e.Belarus="by",e.Belize="bz",e.Bolivia="bo",e.Brazil="br",e.Barbados="bb",e.BruneiDarussalam="bn",e.Bhutan="bt",e.Botswana="bw",e.CentralAfricanRepublic="cf",e.Canada="ca",e.Switzerland="ch",e.Chile="cl",e.China="cn",e.CoteDIvoire="ci",e.Cameroon="cm",e.DemocraticRepublicOfTheCongo="cd",e.RepublicOfTheCongo="cg",e.Colombia="co",e.Comoros="km",e.CapeVerde="cv",e.CostaRica="cr",e.Cuba="cu",e.Cyprus="cy",e.CzechRepublic="cz",e.Germany="de",e.Djibouti="dj",e.Dominica="dm",e.Denmark="dk",e.DominicanRepublic="do",e.Algeria="dz",e.Ecuador="ec",e.Egypt="eg",e.Eritrea="er",e.Spain="es",e.Estonia="ee",e.Ethiopia="et",e.Finland="fi",e.Fiji="fj",e.France="fr",e.MicronesiaFederatedStatesOf="fm",e.Gabon="ga",e.UnitedKingdom="gb",e.Georgia="ge",e.Ghana="gh",e.Guinea="gn",e.Gambia="gm",e.GuineaBissau="gw",e.EquatorialGuinea="gq",e.Greece="gr",e.Grenada="gd",e.Guatemala="gt",e.Guyana="gy",e.Honduras="hn",e.Croatia="hr",e.Haiti="ht",e.Hungary="hu",e.Indonesia="id",e.India="in",e.Ireland="ie",e.IranIslamicRepublicOf="ir",e.Iraq="iq",e.Iceland="is",e.Israel="il",e.Italy="it",e.Jamaica="jm",e.Jordan="jo",e.Japan="jp",e.Kazakhstan="kz",e.Kenya="ke",e.Kyrgyzstan="kg",e.Cambodia="kh",e.Kiribati="ki",e.SaintKittsAndNevis="kn",e.SouthKorea="kr",e.Kuwait="kw",e.LaoPeopleSDemocraticRepublic="la",e.Lebanon="lb",e.Liberia="lr",e.Libya="ly",e.SaintLucia="lc",e.Liechtenstein="li",e.SriLanka="lk",e.Lesotho="ls",e.Lithuania="lt",e.Luxembourg="lu",e.Latvia="lv",e.Morocco="ma",e.Monaco="mc",e.Moldova="md",e.Madagascar="mg",e.Maldives="mv",e.Mexico="mx",e.MarshallIslands="mh",e.NorthMacedonia="mk",e.Mali="ml",e.Malta="mt",e.Myanmar="mm",e.Montenegro="me",e.Mongolia="mn",e.Mozambique="mz",e.Mauritania="mr",e.Mauritius="mu",e.Malawi="mw",e.Malaysia="my",e.Namibia="na",e.Niger="ne",e.Nigeria="ng",e.Nicaragua="ni",e.Netherlands="nl",e.Norway="no",e.Nepal="np",e.Nauru="nr",e.NewZealand="nz",e.Oman="om",e.Pakistan="pk",e.Panama="pa",e.Peru="pe",e.Philippines="ph",e.Palau="pw",e.PapuaNewGuinea="pg",e.Poland="pl",e.FrenchPolynesia="pf",e.NorthKorea="kp",e.Portugal="pt",e.Paraguay="py",e.Qatar="qa",e.Romania="ro",e.Russia="ru",e.Rwanda="rw",e.SaudiArabia="sa",e.Sudan="sd",e.Senegal="sn",e.Singapore="sg",e.SolomonIslands="sb",e.SierraLeone="sl",e.ElSalvador="sv",e.SanMarino="sm",e.Somalia="so",e.Serbia="rs",e.SouthSudan="ss",e.SaoTomeAndPrincipe="st",e.Suriname="sr",e.Slovakia="sk",e.Slovenia="si",e.Sweden="se",e.Eswatini="sz",e.Seychelles="sc",e.Syria="sy",e.Chad="td",e.Togo="tg",e.Thailand="th",e.Tajikistan="tj",e.Turkmenistan="tm",e.TimorLeste="tl",e.Tonga="to",e.TrinidadAndTobago="tt",e.Tunisia="tn",e.Turkey="tr",e.Tuvalu="tv",e.Tanzania="tz",e.Uganda="ug",e.Ukraine="ua",e.Uruguay="uy",e.UnitedStates="us",e.Uzbekistan="uz",e.VaticanCity="va",e.SaintVincentAndTheGrenadines="vc",e.Venezuela="ve",e.Vietnam="vn",e.Vanuatu="vu",e.Samoa="ws",e.Yemen="ye",e.SouthAfrica="za",e.Zambia="zm",e.Zimbabwe="zw"})(M||(M={}));var j;(function(e){e.GET="GET",e.POST="POST",e.PUT="PUT",e.PATCH="PATCH",e.DELETE="DELETE",e.OPTIONS="OPTIONS"})(j||(j={}));var U;(function(e){e.Center="center",e.Topleft="top-left",e.Top="top",e.Topright="top-right",e.Left="left",e.Right="right",e.Bottomleft="bottom-left",e.Bottom="bottom",e.Bottomright="bottom-right"})(U||(U={}));var E;(function(e){e.Jpg="jpg",e.Jpeg="jpeg",e.Gif="gif",e.Png="png",e.Webp="webp",e.Heic="heic",e.Avif="avif"})(E||(E={}));const I=new h().setEndpoint("https://nyc.cloud.appwrite.io/v1").setProject("68d6cf15003d05dbd780"),m=new H(I);class A{constructor(){this.user=null,this.isLoading=!1,this.currentView="auth"}setUser(t){this.user=t,this.currentView=t?"dashboard":"auth",this.render()}setLoading(t){this.isLoading=t,this.render()}render(){const t=document.getElementById("app");this.currentView==="auth"?(t.innerHTML=this.renderAuthView(),this.attachAuthEventListeners()):(t.innerHTML=this.renderDashboardView(),this.attachDashboardEventListeners())}renderAuthView(){return`
            <div class="min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 flex items-center justify-center p-4">
                <div class="bg-white rounded-2xl shadow-xl p-8 w-full max-w-md">
                    <div class="text-center mb-8">
                        <div class="w-16 h-16 bg-indigo-100 rounded-full flex items-center justify-center mx-auto mb-4">
                            <svg class="w-8 h-8 text-indigo-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
                            </svg>
                        </div>
                        <h1 class="text-3xl font-bold text-gray-900 mb-2">Welcome</h1>
                        <p class="text-gray-600">Sign in to your account or create a new one</p>
                    </div>

                    <div class="mb-6">
                        <div class="flex bg-gray-100 rounded-lg p-1" id="auth-tabs">
                            <button class="auth-tab active" data-tab="signin">Sign In</button>
                            <button class="auth-tab" data-tab="signup">Sign Up</button>
                        </div>
                    </div>

                    <form id="auth-form" class="space-y-4">
                        <div id="name-field" class="hidden">
                            <label class="block text-sm font-medium text-gray-700 mb-2">Full Name</label>
                            <input type="text" id="name" class="form-input" placeholder="Enter your full name">
                        </div>
                        
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Email</label>
                            <input type="email" id="email" class="form-input" placeholder="Enter your email" required>
                        </div>
                        
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Password</label>
                            <input type="password" id="password" class="form-input" placeholder="Enter your password" required>
                        </div>

                        <button type="submit" id="auth-submit" class="btn-primary w-full" ${this.isLoading?"disabled":""}>
                            ${this.isLoading?"Processing...":"Sign In"}
                        </button>
                    </form>

                    <div id="auth-error" class="mt-4 p-4 bg-red-50 border border-red-200 rounded-lg text-red-700 text-sm hidden"></div>
                </div>
            </div>
        `}renderDashboardView(){const t=this.user;return`
            <div class="min-h-screen bg-gray-50">
                <nav class="bg-white shadow-sm border-b">
                    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                        <div class="flex justify-between h-16">
                            <div class="flex items-center">
                                <h1 class="text-xl font-semibold text-gray-900">Dashboard</h1>
                            </div>
                            <div class="flex items-center space-x-4">
                                <span class="text-gray-700">Welcome, ${(t==null?void 0:t.name)||(t==null?void 0:t.email)}</span>
                                <button id="logout-btn" class="btn-secondary">Logout</button>
                            </div>
                        </div>
                    </div>
                </nav>

                <main class="max-w-7xl mx-auto py-8 px-4 sm:px-6 lg:px-8">
                    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                        <!-- User Profile Card -->
                        <div class="bg-white rounded-xl shadow-sm p-6 col-span-1 md:col-span-2">
                            <div class="flex items-center space-x-4 mb-6">
                                <div class="w-16 h-16 bg-indigo-100 rounded-full flex items-center justify-center">
                                    <svg class="w-8 h-8 text-indigo-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
                                    </svg>
                                </div>
                                <div>
                                    <h2 class="text-xl font-semibold text-gray-900">Profile Information</h2>
                                    <p class="text-gray-600">Manage your account details</p>
                                </div>
                            </div>

                            <div class="space-y-4">
                                <div>
                                    <label class="block text-sm font-medium text-gray-700 mb-2">Full Name</label>
                                    <input type="text" id="profile-name" class="form-input" value="${(t==null?void 0:t.name)||""}" placeholder="Enter your name">
                                </div>
                                
                                <div>
                                    <label class="block text-sm font-medium text-gray-700 mb-2">Email (Read-only)</label>
                                    <input type="email" class="form-input bg-gray-50" value="${(t==null?void 0:t.email)||""}" disabled>
                                    <p class="text-xs text-gray-500 mt-1">Email cannot be changed</p>
                                </div>

                                <div>
                                    <label class="block text-sm font-medium text-gray-700 mb-2">User ID (Read-only)</label>
                                    <input type="text" class="form-input bg-gray-50 font-mono text-sm" value="${(t==null?void 0:t.$id)||""}" disabled>
                                    <p class="text-xs text-gray-500 mt-1">Unique identifier for your account</p>
                                </div>

                                <div>
                                    <label class="block text-sm font-medium text-gray-700 mb-2">Account Created (Read-only)</label>
                                    <input type="text" class="form-input bg-gray-50" value="${t!=null&&t.$createdAt?new Date(t.$createdAt).toLocaleDateString():"N/A"}" disabled>
                                </div>

                                <button id="update-profile-btn" class="btn-primary">Update Profile</button>
                            </div>
                        </div>

                        <!-- Account Statistics -->
                        <div class="bg-white rounded-xl shadow-sm p-6">
                            <h3 class="text-lg font-semibold text-gray-900 mb-4">Account Info</h3>
                            <div class="space-y-4">
                                <div class="flex justify-between">
                                    <span class="text-gray-600">Status:</span>
                                    <span class="text-green-600 font-medium">${t!=null&&t.emailVerification?"Verified":"Unverified"}</span>
                                </div>
                                <div class="flex justify-between">
                                    <span class="text-gray-600">Last Updated:</span>
                                    <span class="text-gray-900">${t!=null&&t.$updatedAt?new Date(t.$updatedAt).toLocaleDateString():"N/A"}</span>
                                </div>
                                <div class="flex justify-between">
                                    <span class="text-gray-600">Account Type:</span>
                                    <span class="text-gray-900">Standard</span>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div id="dashboard-message" class="mt-4 p-4 bg-green-50 border border-green-200 rounded-lg text-green-700 text-sm hidden"></div>
                    <div id="dashboard-error" class="mt-4 p-4 bg-red-50 border border-red-200 rounded-lg text-red-700 text-sm hidden"></div>
                </main>
            </div>
        `}attachAuthEventListeners(){document.querySelectorAll(".auth-tab").forEach(t=>{t.addEventListener("click",n=>{const i=n.target.dataset.tab;this.switchAuthTab(i)})}),document.getElementById("auth-form").addEventListener("submit",t=>{t.preventDefault(),this.handleAuthSubmit()})}attachDashboardEventListeners(){document.getElementById("logout-btn").addEventListener("click",()=>{this.handleLogout()}),document.getElementById("update-profile-btn").addEventListener("click",()=>{this.handleUpdateProfile()})}switchAuthTab(t){document.querySelectorAll(".auth-tab").forEach(o=>{o.classList.remove("active")}),document.querySelector(`[data-tab="${t}"]`).classList.add("active");const n=document.getElementById("name-field"),i=document.getElementById("auth-submit");t==="signup"?(n.classList.remove("hidden"),i.textContent="Sign Up"):(n.classList.add("hidden"),i.textContent="Sign In")}async handleAuthSubmit(){const t=document.getElementById("auth-form");new FormData(t);const n=document.getElementById("email").value,i=document.getElementById("password").value,o=document.getElementById("name").value,s=document.querySelector(".auth-tab.active").dataset.tab==="signup";this.setLoading(!0),this.hideError("auth-error");try{let a;if(s){if(!o.trim())throw new Error("Name is required for signup");a=await m.create(b.unique(),n,i,o),await m.createEmailPasswordSession(n,i),a=await m.get()}else await m.createEmailPasswordSession(n,i),a=await m.get();this.setUser(a)}catch(a){this.showError("auth-error",a.message)}finally{this.setLoading(!1)}}async handleLogout(){try{await m.deleteSession("current"),this.setUser(null)}catch(t){console.error("Logout error:",t)}}async handleUpdateProfile(){const t=document.getElementById("profile-name").value;if(!t.trim()){this.showError("dashboard-error","Name cannot be empty");return}try{const n=await m.updateName(t);this.setUser(n),this.showMessage("dashboard-message","Profile updated successfully!")}catch(n){this.showError("dashboard-error",n.message)}}showError(t,n){const i=document.getElementById(t);i.textContent=n,i.classList.remove("hidden"),setTimeout(()=>i.classList.add("hidden"),5e3)}showMessage(t,n){const i=document.getElementById(t);i.textContent=n,i.classList.remove("hidden"),setTimeout(()=>i.classList.add("hidden"),3e3)}hideError(t){document.getElementById(t).classList.add("hidden")}}const y=new A;document.addEventListener("DOMContentLoaded",async()=>{console.log("DOM Content Loaded - Starting app initialization");try{if(new URLSearchParams(window.location.search).get("demo")==="true"){console.log("Demo mode detected");const t={$id:"demo-user-12345",name:"John Doe",email:"john.doe@example.com",emailVerification:!0,$createdAt:"2024-01-15T10:30:00.000Z",$updatedAt:"2024-01-20T14:45:00.000Z"};y.setUser(t);return}console.log("Checking for existing user session");try{const t=await m.get();console.log("User session found:",t),y.setUser(t)}catch(t){console.log("No existing user session, showing auth view:",t.message),y.setUser(null)}}catch(e){console.error("Global error in app initialization:",e),y.setUser(null)}});setTimeout(()=>{const e=document.getElementById("app");e&&e.innerHTML.includes("Loading...")&&(console.warn("App still showing loading state after 3 seconds, forcing auth view"),y.setUser(null))},3e3);
